<!DOCTYPE html><html><head><title>CSE354 sp21 Assignment 2</title><link rel="shortcut icon" href="https://ssl.gstatic.com/docs/documents/images/kix-favicon7.ico"><meta name="referrer" content="strict-origin-when-cross-origin"><style type="text/css" nonce="uqkojzpJQASLfKE8FMsn6g">
      @import url("https://fonts.googleapis.com/css?family=Google+Sans");
      @import url("https://fonts.googleapis.com/css?family=Roboto");

      body {
        font-family: Roboto, arial, sans, sans-serif;
        margin: 0;
      }

      iframe {
        border: 0;
        frameborder: 0;
        height: 100%;
        width: 100%;
      }

      #banners {
        align-items: center;
        background: white;
        display: block;
        justify-content: space-between;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 100;
      }

      #banners #publish-banner {
        background-color: #e8f0fe;
        border-bottom: 1px #ccc solid;
        color: #202124;
        display: flex;
        flex: 1 1 0%;
        height: 60px;
        width: 100%;
      }

      #publish-banner-icon {
        display: flex;
        fill: #1967d2;
        margin: auto 20px;
      }

      #publish-banner-text {
        flex-grow: 1;
        margin: auto 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      #publish-banner-buttons {
        margin: auto 25px auto 0;
      }

      #publish-banner-buttons span {
        align-self: center;
        background-color: inherit;
        border: none;
        font-family: "Google Sans", Roboto, RobotoDraft, Helvetica, Arial, sans-serif;
        margin: 0 16px 0 32px;
      }

      #publish-banner-buttons a {
        color: #1967d2;
        cursor: pointer;
        font-family: "Google Sans", Roboto, RobotoDraft, Helvetica, Arial, sans-serif;
        font-size: 14px;
        font-weight: 500;
        line-height: 24px;
        text-decoration: none;
      }

      #banners #title-banner {
        background: white;
        border-bottom: 1px #ccc solid;
        display: flex;
        flex: 1 1 0%;
        height: 60px;
        width: 100%;
      }

      #banners #title-banner #title {
        flex-grow: 1;
        font-family: 'Google Sans';
        font-size: large;
        margin: auto 0 auto 20px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: 70%;
      }

      #banners #title-banner #interval {
        margin: auto 25px auto 0;
        font-family: Roboto;
        font-size: small;;
      }

      #footer {
        background: #f0f0f0;
        border-bottom: 1px #ccc solid;
        bottom: 0;
        font-family: Roboto;
        font-size: small;
        padding: 10px 10px;
        position: fixed;
        text-align: center;
        width: 100%;
      }

      #contents {
        padding: 100px 20% 50px 20%;
      }

      @media only screen and (max-device-width: 800px) {
        #banners #title-banner {
          border-bottom-width: 5px;
          height: auto;
          display: block;
        }

        #banners #title-banner #title {
          font-size: 3em;
          margin: auto 0 auto 20px;
          width: 90%;
        }

        #banners #title-banner #interval {
          font-size: 1.5em;
          margin: 10px 0 auto 25px;
        }

        #contents {
          padding: 150px 5% 80px;
        }

        #footer {
          font-size: 2em;
        }
      }

      .dash {
        padding: 0 6px;
      }
    </style></head><body><div id="banners"><div id="publish-banner"><span id="publish-banner-icon"><svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px"><path d="M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/></svg></span><div id="publish-banner-text">Published using Google Docs</div><div id="publish-banner-buttons"><span><a target="_blank" title="Learn more" href="https://support.google.com/docs/answer/183965">Learn More</a></span><span><a href="https://docs.google.com/u/0/abuse?id=AKkXjozl4K1oOlE529qUli07Ocaz7mSkec6Bo-I1DGY-Ct0ekBpt5yZtvUgudG8pElTJh8r3Dd_BfCKZHH_DcRs:0">Report Abuse</a></span></div></div><div id="title-banner"><div id="title">CSE354 sp21 Assignment 2</div><div id="interval"><span>Updated automatically every 5 minutes</span></div></div></div><div id="contents"><style type="text/css">@import url('https://themes.googleusercontent.com/fonts/css?kit=cGvuclDC_Z1vE_cnVEU6ARhuDe_sK22yCUQZ5Vf1wIENOOEpmvcifUD2aGYaSNsk8pg2rJqXd21ZAdpwzC-KMg');.lst-kix_wu1g3gcuroz8-5>li:before{content:"\0025a0  "}.lst-kix_wu1g3gcuroz8-6>li:before{content:"\0025cf  "}.lst-kix_wu1g3gcuroz8-2>li:before{content:"\0025a0  "}.lst-kix_naxvrc9ozoh5-0>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-0}.lst-kix_wu1g3gcuroz8-3>li:before{content:"\0025cf  "}.lst-kix_wu1g3gcuroz8-4>li:before{content:"\0025cb  "}ol.lst-kix_naxvrc9ozoh5-0.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-0 0}.lst-kix_lkjrwxp6nt5x-8>li:before{content:"\0025a0  "}ul.lst-kix_4e6x856icvo8-8{list-style-type:none}.lst-kix_naxvrc9ozoh5-1>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-1}ul.lst-kix_4e6x856icvo8-6{list-style-type:none}ul.lst-kix_4e6x856icvo8-7{list-style-type:none}ul.lst-kix_4e6x856icvo8-4{list-style-type:none}ul.lst-kix_4e6x856icvo8-5{list-style-type:none}ul.lst-kix_4e6x856icvo8-2{list-style-type:none}ul.lst-kix_4e6x856icvo8-3{list-style-type:none}.lst-kix_wu1g3gcuroz8-8>li:before{content:"\0025a0  "}.lst-kix_wu1g3gcuroz8-7>li:before{content:"\0025cb  "}ul.lst-kix_4e6x856icvo8-0{list-style-type:none}ul.lst-kix_4e6x856icvo8-1{list-style-type:none}ol.lst-kix_naxvrc9ozoh5-8.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-8 0}.lst-kix_wu1g3gcuroz8-1>li:before{content:"\0025cb  "}.lst-kix_wu1g3gcuroz8-0>li:before{content:"\0025cf  "}.lst-kix_4e6x856icvo8-2>li:before{content:"\0025a0  "}.lst-kix_o94ln9va44sn-7>li:before{content:"\0025cb  "}.lst-kix_4e6x856icvo8-0>li:before{content:"\0025cf  "}.lst-kix_4e6x856icvo8-4>li:before{content:"\0025cb  "}ol.lst-kix_naxvrc9ozoh5-7{list-style-type:none}ol.lst-kix_naxvrc9ozoh5-8{list-style-type:none}.lst-kix_4e6x856icvo8-3>li:before{content:"\0025cf  "}.lst-kix_o94ln9va44sn-4>li:before{content:"\0025cb  "}.lst-kix_o94ln9va44sn-8>li:before{content:"\0025a0  "}ol.lst-kix_naxvrc9ozoh5-5{list-style-type:none}ol.lst-kix_naxvrc9ozoh5-6{list-style-type:none}.lst-kix_4e6x856icvo8-6>li:before{content:"\0025cf  "}ol.lst-kix_naxvrc9ozoh5-3{list-style-type:none}ol.lst-kix_naxvrc9ozoh5-4{list-style-type:none}ol.lst-kix_naxvrc9ozoh5-1{list-style-type:none}ol.lst-kix_naxvrc9ozoh5-2{list-style-type:none}.lst-kix_o94ln9va44sn-5>li:before{content:"\0025a0  "}ol.lst-kix_naxvrc9ozoh5-0{list-style-type:none}.lst-kix_4e6x856icvo8-5>li:before{content:"\0025a0  "}.lst-kix_o94ln9va44sn-6>li:before{content:"\0025cf  "}ul.lst-kix_o94ln9va44sn-7{list-style-type:none}ul.lst-kix_o94ln9va44sn-6{list-style-type:none}ul.lst-kix_o94ln9va44sn-8{list-style-type:none}ul.lst-kix_o94ln9va44sn-1{list-style-type:none}ul.lst-kix_o94ln9va44sn-0{list-style-type:none}ul.lst-kix_o94ln9va44sn-3{list-style-type:none}ol.lst-kix_naxvrc9ozoh5-2.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-2 0}ul.lst-kix_o94ln9va44sn-2{list-style-type:none}.lst-kix_4e6x856icvo8-1>li:before{content:"\0025cb  "}ul.lst-kix_o94ln9va44sn-5{list-style-type:none}ul.lst-kix_o94ln9va44sn-4{list-style-type:none}.lst-kix_lkjrwxp6nt5x-0>li:before{content:"\0025cf  "}.lst-kix_naxvrc9ozoh5-5>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-5,lower-roman) ". "}.lst-kix_naxvrc9ozoh5-7>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-7,lower-latin) ". "}.lst-kix_lkjrwxp6nt5x-1>li:before{content:"\0025cb  "}.lst-kix_naxvrc9ozoh5-4>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-4,lower-latin) ". "}.lst-kix_naxvrc9ozoh5-8>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-8,lower-roman) ". "}.lst-kix_lkjrwxp6nt5x-2>li:before{content:"\0025a0  "}.lst-kix_naxvrc9ozoh5-1>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-1,lower-latin) ". "}.lst-kix_naxvrc9ozoh5-3>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-3,decimal) ". "}.lst-kix_naxvrc9ozoh5-2>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-2,lower-roman) ". "}.lst-kix_lkjrwxp6nt5x-7>li:before{content:"\0025cb  "}.lst-kix_o94ln9va44sn-0>li:before{content:"\0025cf  "}ol.lst-kix_naxvrc9ozoh5-3.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-3 0}.lst-kix_naxvrc9ozoh5-8>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-8}.lst-kix_lkjrwxp6nt5x-6>li:before{content:"\0025cf  "}.lst-kix_o94ln9va44sn-3>li:before{content:"\0025cf  "}.lst-kix_naxvrc9ozoh5-5>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-5}.lst-kix_lkjrwxp6nt5x-3>li:before{content:"\0025cf  "}.lst-kix_lkjrwxp6nt5x-5>li:before{content:"\0025a0  "}.lst-kix_o94ln9va44sn-1>li:before{content:"\0025cb  "}.lst-kix_o94ln9va44sn-2>li:before{content:"\0025a0  "}.lst-kix_naxvrc9ozoh5-2>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-2}.lst-kix_naxvrc9ozoh5-6>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-6,decimal) ". "}.lst-kix_lkjrwxp6nt5x-4>li:before{content:"\0025cb  "}ul.lst-kix_wu1g3gcuroz8-0{list-style-type:none}ul.lst-kix_lkjrwxp6nt5x-2{list-style-type:none}ul.lst-kix_wu1g3gcuroz8-1{list-style-type:none}ul.lst-kix_lkjrwxp6nt5x-3{list-style-type:none}ul.lst-kix_wu1g3gcuroz8-2{list-style-type:none}ul.lst-kix_lkjrwxp6nt5x-4{list-style-type:none}ul.lst-kix_wu1g3gcuroz8-3{list-style-type:none}ul.lst-kix_lkjrwxp6nt5x-5{list-style-type:none}ul.lst-kix_lkjrwxp6nt5x-6{list-style-type:none}ul.lst-kix_lkjrwxp6nt5x-7{list-style-type:none}ul.lst-kix_lkjrwxp6nt5x-8{list-style-type:none}ul.lst-kix_wu1g3gcuroz8-8{list-style-type:none}ul.lst-kix_wu1g3gcuroz8-4{list-style-type:none}ul.lst-kix_wu1g3gcuroz8-5{list-style-type:none}ul.lst-kix_wu1g3gcuroz8-6{list-style-type:none}ul.lst-kix_lkjrwxp6nt5x-0{list-style-type:none}ul.lst-kix_wu1g3gcuroz8-7{list-style-type:none}.lst-kix_naxvrc9ozoh5-6>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-6}ul.lst-kix_lkjrwxp6nt5x-1{list-style-type:none}.lst-kix_naxvrc9ozoh5-7>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-7}.lst-kix_naxvrc9ozoh5-0>li:before{content:"" counter(lst-ctn-kix_naxvrc9ozoh5-0,decimal) ". "}ol.lst-kix_naxvrc9ozoh5-7.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-7 0}ol.lst-kix_naxvrc9ozoh5-1.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-1 0}ol.lst-kix_naxvrc9ozoh5-4.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-4 0}.lst-kix_4e6x856icvo8-8>li:before{content:"\0025a0  "}.lst-kix_4e6x856icvo8-7>li:before{content:"\0025cb  "}.lst-kix_naxvrc9ozoh5-3>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-3}ol.lst-kix_naxvrc9ozoh5-5.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-5 0}.lst-kix_naxvrc9ozoh5-4>li{counter-increment:lst-ctn-kix_naxvrc9ozoh5-4}ol.lst-kix_naxvrc9ozoh5-6.start{counter-reset:lst-ctn-kix_naxvrc9ozoh5-6 0}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ol{margin:0;padding:0}table td,table th{padding:0}.c10{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c20{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:458pt;border-top-color:#000000;border-bottom-style:solid}.c13{-webkit-text-decoration-skip:none;color:#1155cc;font-weight:700;text-decoration:underline;vertical-align:baseline;text-decoration-skip-ink:none;font-size:11pt;font-family:"Arial";font-style:normal}.c4{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:8pt;font-family:"Consolas";font-style:normal}.c1{padding-top:16pt;padding-bottom:4pt;line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c26{-webkit-text-decoration-skip:none;color:#000000;text-decoration:underline;vertical-align:baseline;text-decoration-skip-ink:none;font-family:"Consolas";font-style:normal}.c2{color:#980000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Arial";font-style:normal}.c54{padding-top:0pt;padding-bottom:10pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c17{padding-top:10pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c44{padding-top:10pt;padding-bottom:0pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c3{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c52{padding-top:4pt;padding-bottom:0pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c50{padding-top:10pt;padding-bottom:4pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c14{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:center}.c23{color:#666666;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:"Arial";font-style:normal}.c37{color:#980000;text-decoration:none;vertical-align:baseline;font-family:"Arial";font-style:normal}.c18{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:center}.c5{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c22{margin-left:36pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c40{color:#666666;text-decoration:none;vertical-align:baseline;font-style:normal}.c33{color:#0000ff;text-decoration:none;vertical-align:baseline;font-style:normal}.c31{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c35{color:#38761d;text-decoration:none;vertical-align:baseline;font-style:normal}.c29{border-spacing:0;border-collapse:collapse;margin-right:auto}.c7{color:#000000;text-decoration:none;vertical-align:baseline;font-style:normal}.c12{font-weight:700;font-size:12pt;font-family:"Arial"}.c48{text-decoration:none;vertical-align:baseline;font-style:normal}.c41{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;text-decoration:underline}.c16{font-weight:400;font-size:11pt;font-family:"Consolas"}.c6{font-size:9pt;font-family:"Consolas";font-weight:400}.c34{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;text-decoration:line-through}.c11{font-weight:400;font-size:11pt;font-family:"Arial"}.c60{color:#000000;text-decoration:none;vertical-align:baseline}.c46{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c61{vertical-align:baseline;font-style:normal}.c59{orphans:2;widows:2}.c51{margin-left:72pt;padding-left:0pt}.c36{color:inherit;text-decoration:inherit}.c21{margin-left:36pt;padding-left:0pt}.c28{font-weight:400;font-family:"Consolas"}.c24{padding:0;margin:0}.c15{font-weight:700;font-family:"EB Garamond"}.c57{font-family:"Times New Roman";font-weight:400}.c0{font-weight:500;font-family:"EB Garamond"}.c45{color:#980000}.c47{color:#666666}.c38{font-family:"Arial"}.c27{height:0pt}.c9{color:#ff0000}.c55{height:14pt}.c49{color:#38761d}.c43{color:#0000ff}.c19{font-weight:700}.c53{color:#e69138}.c56{font-style:italic}.c32{font-size:12pt}.c62{color:#000000}.c25{font-size:11pt}.c39{color:#ff9900}.c30{font-size:10pt}.c8{height:11pt}.c58{font-size:14pt}.c42{color:#6aa84f}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:"Arial"}p{margin:0;color:#000000;font-size:11pt;font-family:"Arial"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#666666;font-weight:700;font-size:14pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style><div class="c46"><p class="c5 c59"><span class="c7 c11">Natural Language Processing</span></p><p class="c54"><span class="c7 c11">Stony Brook University<br>CSE545 - Spring 2021</span></p><p class="c3 c8"><span class="c7 c11"></span></p><p class="c3"><span class="c7 c12">Assignment 2.</span></p><p class="c3"><span class="c19 c32">Assigned: 3/5/2021;   Due: </span><span class="c19 c32 c34">3/19/2021</span><span class="c19 c32"> 3/21/2021</span><span class="c19 c32"> 11:59pm</span></p><p class="c3 c8"><span class="c7 c11"></span></p><p class="c3 c8"><span class="c7 c11"></span></p><p class="c52"><span class="c13"><a class="c36" href="#h.zgymqqehz1l5">Overview</a></span></p><p class="c44"><span class="c13"><a class="c36" href="#h.o395fc8e8l0b">Data</a></span></p><p class="c44"><span class="c13"><a class="c36" href="#h.8ndmnfn3weqt">Part 1: Word Sense Disambiguation (WSD) with One-Hot Neighbors</a></span></p><p class="c44"><span class="c13"><a class="c36" href="#h.vqlcvvlqjsa7">Part 2: Extracting PCA-Based Word Embeddings</a></span></p><p class="c44"><span class="c13"><a class="c36" href="#h.66p5n89tc6g">Part 3: WSD with Embeddings</a></span></p><p class="c50"><span class="c31"><a class="c36" href="#h.kl4hfzeki4tp">Extra Credit: WSD with Lemma and POS-aware embeddings</a></span></p><p class="c3 c8"><span class="c7 c11"></span></p><h3 class="c1" id="h.zgymqqehz1l5"><span>Overview </span></h3><a id="t.24c581e794843a7a4949a4b732184791b5234691"></a><a id="t.0"></a><table class="c29"><tbody><tr class="c27"><td class="c10" colspan="1" rowspan="1"><p class="c3"><span class="c15">Goals.</span></p><ul class="c24 lst-kix_o94ln9va44sn-0 start"><li class="c3 c21 li-bullet-0"><span class="c7 c0 c25">Implement reading of NLP data. </span></li><li class="c3 c21 li-bullet-0"><span class="c7 c0 c25">Use one-hot encoding for location-specific features.</span></li><li class="c3 c21 li-bullet-0"><span class="c7 c0 c25">Implement word sense disambiguation.</span></li><li class="c3 c21 li-bullet-0"><span class="c7 c0 c25">Implement word embeddings to be used as features. </span></li><li class="c3 c21 li-bullet-0"><span class="c7 c0 c25">Gain a deeper understanding of lexical semantics through implementing disambiguation and embedding techniques.</span></li></ul><p class="c3 c8"><span class="c7 c0 c25"></span></p><p class="c3"><span class="c15">General Requirements</span><span class="c7 c0 c25">. You must use Python version 3.6 or later, along with Pytorch 1.4.0.  You may integrate any code (e.g. the logistic regression code) from your assignment 1. </span></p><p class="c3 c8"><span class="c7 c0 c25"></span></p><p class="c3 c8"><span class="c7 c0 c25"></span></p><p class="c3"><span class="c15">Python Libraries.</span><span class="c0">  No libraries beyond those listed below are permitted.  </span><span class="c15">Of these libraries, you may not use any subcomponents that specifically implement a concept which the instructions indicate you should implement (e.g. a one-hot feature embedding). </span><span class="c0"> The project can be complete without any additional libraries. However, if any additional libraries are deemed permissible they will be listed here:<br>  </span><span class="c28">  </span><span class="c16 c56 c60">torch-1.4.0</span></p><p class="c3"><span class="c7 c16">  sys</span></p><p class="c3"><span class="c7 c16">  re</span></p><p class="c3"><span class="c7 c16">  numpy</span></p><p class="c3"><span class="c28">  pandas </span><span class="c6 c40"># only for data reading and storage (simpler to not use this)</span></p><p class="c3"><span class="c28">  csv </span><span class="c6 c47"># though it is just as easy to read the input without</span><span class="c0">  </span><span class="c0"><br></span></p><p class="c17"><span class="c15">Submission.</span><span class="c0"> </span></p><ol class="c24 lst-kix_naxvrc9ozoh5-0 start" start="1"><li class="c17 c21 li-bullet-0"><span>Place all of your code in a single file</span><span class="c0">, </span><span class="c28">a2_&lt;lastname&gt;_&lt;id&gt;.py</span><span>, which takes in the training data and testing data filenames as parameters.  </span><span class="c0"><br></span><span>All three parts of your code should run with:</span><span class="c0"> <br>        </span><span class="c6">python3</span><span> </span><span class="c6">a2_LASTNAME_ID.py onesec_train.tsv onesec_test.tsv<br></span></li><li class="c17 c21 li-bullet-0"><span class="c30">Place the output of your code in a single file called  </span><span class="c28 c30">a2_&lt;lastname&gt;_&lt;id&gt;_OUTPUT.txt</span><span class="c30"><br>After the package imports add the following line which sends your </span><span class="c28 c30">print()</span><span class="c30"> statements to a file instead of the console<br>        </span><span class="c28 c30">sys.stdout = open(&#39;a2_lastname_id_OUTPUT.txt&#39;, &#39;w&#39;)</span><span class="c30"><br>Change the file name to include your personal details. If this causes you any issues you can </span><span class="c28 c30">&gt;</span><span class="c30"> your results to a text file from your terminal or copy-and-paste your results into a .txt</span><span class="c28 c30"><br></span></li><li class="c17 c21 li-bullet-0"><span>Submit both</span><span class="c15"> the .py and .txt in </span><span class="c0">Blackboard under assignment 1. <br></span><span class="c15">DO NOT ZIP</span><span class="c0"> </span><span class="c15">the files, </span><span class="c0">submit them as 2 independent files.</span><span class="c0"><br></span></li></ol><p class="c17"><span class="c15">Academic Integrity.</span><span class="c7 c0 c25">  Copying chunks of code  from other students, websites or other resources outside of materials provided in class is prohibited. You are responsible for both (1) not copying others&#39; work, and (2) making sure your work is not accessible to others. Assignments will be extensively checked for copying of others’ work. Please see the syllabus for additional policies. </span></p></td></tr></tbody></table><h3 class="c1 c55" id="h.n1rrayutesxr"><span class="c23 c19"></span></h3><h3 class="c1" id="h.o395fc8e8l0b"><span class="c7 c38 c19 c58">Data</span></h3><a id="t.d36a3cd4f4aeedbd8332ddeb5c974c65f5096e8e"></a><a id="t.1"></a><table class="c29"><tbody><tr class="c27"><td class="c10" colspan="1" rowspan="1"><p class="c3"><span class="c19">Ambiguities hiding in plain sight!</span><span class="c7 c11"> Have you noticed that the words &quot;language&quot;, &quot;process&quot;, and &quot;machine&quot;, some of the most frequent words mentioned in this course, are quite ambiguous themselves?</span></p><p class="c3 c8"><span class="c7 c11"></span></p><p class="c3"><span class="c7 c11">You will use a subset of a modern word sense disambiguation corpus, called &quot;onesec&quot; for your training and test data. You can download this subset here:</span></p><p class="c14"><span class="c31"><a class="c36" href="https://www.google.com/url?q=https://www3.cs.stonybrook.edu/~has/CSE354/onesec_train.tsv&amp;sa=D&amp;source=editors&amp;ust=1636830150706000&amp;usg=AOvVaw3knLYtWnMK4Je9dLRhdZ4J">Training Data</a></span></p><p class="c14"><span class="c31"><a class="c36" href="https://www.google.com/url?q=https://www3.cs.stonybrook.edu/~has/CSE354/onesec_test.tsv&amp;sa=D&amp;source=editors&amp;ust=1636830150707000&amp;usg=AOvVaw3122dP0VYnPBoitQj1dv49">Test Data</a></span></p><p class="c14 c8"><span class="c7 c11"></span></p><p class="c3"><span>You can read about the original dataset here: </span><span class="c31"><a class="c36" href="https://www.google.com/url?q=http://trainomatic.org/onesec&amp;sa=D&amp;source=editors&amp;ust=1636830150708000&amp;usg=AOvVaw2ltEAQYj0fQEVEOEqDDayr">http://trainomatic.org/onesec</a></span><span>. </span><span class="c7 c11">Interestingly, the data was created by exploiting the idea that most wikipedia categories only utilize one sense of a particular word within the article (&quot;language&quot; in  computer programming article is always a programming language; where as in an article about swearing it&#39;s about the words one chooses; yet another article about a particular country is probably referring to the natural language spoken in that country).. </span></p><p class="c3 c8"><span class="c7 c11"></span></p><p class="c3"><span>For the purposes of this assignment, there are three pieces of information being used: <br>1. </span><span class="c19">The lemma</span><span> and id -- a unique value for every example (&quot;</span><span class="c28">language.NOUN.000068</span><span class="c7 c11">&quot;)</span></p><p class="c3"><span>2. </span><span class="c19">The sense</span><span> -- the target word label; i.e. its sense (e.g. &quot;</span><span class="c28">language%1:10:01::</span><span class="c7 c11">&quot;). </span></p><p class="c3"><span>3. </span><span class="c19">The context</span><span> --</span><span> The context (typically a sentence) in which the target word is mentioned. The target word is surrounded by </span><span class="c28">&lt;head&gt;word&lt;/head&gt;</span><span>.  </span><span class="c19">The unigrams are already tokenized, and delimited simply by a space.</span><span> Further each word is given as original_word/lemma/part-of-speech. For example,  in &quot;</span><span class="c28">is/be/AUX</span><span>&quot;, &quot;</span><span class="c28">is</span><span>&quot; is the original token, &quot;</span><span class="c28">be</span><span>&quot; is its lemma, and &quot;</span><span class="c28">AUX</span><span class="c7 c11">&quot; is the part of speech (you can ignore the lemma and part of speech unless you do the extra credit). </span></p><p class="c3 c8"><span class="c7 c11"></span></p><p class="c3"><span>The files have these 3 fields in a .tsv (tab-separated values) format:<br></span><span class="c7 c16">lemma.POS.id     sense    context</span></p></td></tr></tbody></table><p class="c3 c8"><span class="c7 c11"></span></p><p class="c3 c8"><span class="c7 c11"></span></p><h3 class="c1" id="h.8ndmnfn3weqt"><span class="c23 c19">Part 1: Word Sense Disambiguation (WSD) with One-Hot Neighbors</span></h3><a id="t.96cb96af92aa36d4053cacff4e318fd82489e676"></a><a id="t.2"></a><table class="c29"><tbody><tr class="c27"><td class="c10" colspan="1" rowspan="1"><p class="c5"><span class="c19">1.1 Read the data (15 pts). </span><span class="c7 c11">Refer to the data description above. You will need to store each of the 3 pieces for each record. In addition:</span></p><ul class="c24 lst-kix_lkjrwxp6nt5x-0 start"><li class="c5 c21 li-bullet-0"><span class="c7 c11">convert the sense (a string) into an integer. Your classifier will need to take an integer in as the label rather than a string. It can be any unique integer per sense. </span></li><li class="c5 c21 li-bullet-0"><span class="c7 c11">within the context, remove the lemma and POS (for parts 1 - 3; you may use them for the extra credit). </span></li><li class="c5 c21 li-bullet-0"><span class="c7 c11">track the counts of all words, so that it is easy to check if it is in or outside the vocabulary later. You will use the 2000 most frequent words of the training set as the vocabulary throughout this assignment. </span></li><li class="c5 c21 li-bullet-0"><span>make sure you can easily access just the &quot;language&quot;, &quot;process&quot;, or &quot;machine&quot; examples. </span><span class="c19">You will be making a separate classifier for each</span><span class="c7 c11">. <br></span></li></ul><p class="c5"><span class="c19">1.2 Add one-hot feature encoding (10 pts). </span><span class="c7 c11">Using only the 2000 most frequent words as your vocabulary, make 2 one-hot encodings,  one for the word before the target word and one for the word after:</span></p><p class="c18"><span class="c9"> [one word before]</span><span> _target word_ </span><span class="c43">[one word after]</span><span><br></span><span class="c9">to</span><span> process </span><span class="c11 c33">paperwork</span></p><p class="c18"><span class="c9">[0 0 0 1 0 ...]</span><span class="c33 c11">[1 0 0 0 0 ...]</span></p><p class="c18"><span class="c7 c11">[0 0 0 1 0 … 1 0 0 0 0 ...]</span></p><p class="c5"><span class="c7 c11">The data includes the part-of-speech of each word -- please disregard that and only focus on the word itself (you may use it for the extra credit, separately). At the end of this step you should have 4000 features -- the concatenation of both one-hot encodings.</span></p><p class="c5 c8"><span class="c7 c19 c25 c38"></span></p><p class="c5"><span class="c19">1.3 Train logistic regression classifiers (10 pts). </span><span>Make sure to only use the train data, and train a separate classifier for each lemma. You will need to use logistic regression that can handle more than two outcome classes, this means replacing the loss function with cross entropy loss (a multivariate version of log loss, where </span><span class="c57 c56">j</span><span> represents the class from among all classes, </span><span class="c56 c57">V</span><span class="c7 c11">): </span></p><p class="c18"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 239.50px; height: 60.65px;"><img alt="" src="https://lh5.googleusercontent.com/DTGMKZwxfYhw4qo25U5-WZzT9A8l6vZXNC162yEkUXcQmFENAkwUH8kt-eqn_Bi66Vqb4ZxymGiSEAlZXY8EQ-gnzrATjFAopX2ujjj6EIdPduyonmS-0QV3qQb3Bv15_3r3Y_ir" style="width: 239.50px; height: 60.65px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c5"><span>You will also need to adjust </span><span class="c28">LogReg()</span><span> to return </span><span class="c28">len(unique_classes)</span><span> responses and not </span><span class="c28">1</span><span class="c7 c11">. </span></p><p class="c5 c8"><span class="c7 c38 c19 c25"></span></p><p class="c5"><span class="c19">1.4 Test each classifier on the test set (5 pts). </span><span class="c7 c11">Output the number correct out of the total for each word as well as the predictions (probabilities or linear output per label) for the following examples: </span></p><p class="c5"><span class="c7 c6">process.NOUN.000018, process.NOUN.000024, language.NOUN.000008, language.NOUN.000014, machine.NOUN.000004, machine.NOUN.000008</span></p><p class="c5"><span>Aim for an accuracy </span><img src="https://www.google.com/chart?cht=tx&amp;chf=bg,s,FFFFFF00&amp;chco=000000&amp;chl=%5Cgeq%7B%7D"><span class="c7 c11"> than the most frequent sense baselines for each:</span></p><p class="c5"><span class="c7 c6"> process</span></p><p class="c5"><span class="c7 c6">   correct: 141 out of 202</span></p><p class="c5"><span class="c7 c6"> machine</span></p><p class="c5"><span class="c7 c6">   correct: 138 out of 202</span></p><p class="c5"><span class="c6 c7"> language</span></p><p class="c5"><span class="c7 c6">   correct: 142 out of 202</span></p><p class="c5 c8"><span class="c7 c11"></span></p><p class="c5 c8"><span class="c7 c11"></span></p><p class="c5 c8"><span class="c7 c11"></span></p><p class="c3"><span class="c19 c45">Part 1 Hints.</span></p><ul class="c24 lst-kix_wu1g3gcuroz8-0 start"><li class="c3 c21 li-bullet-0"><span class="c2">The .tsv file is easy to parse by splitting each line on tabs, taking the first element as the lemma.id, the second as the sense label, and the remainder as the context (even if it contains a tab).</span></li><li class="c3 c21 li-bullet-0"><span class="c2">Use a dictionary to store a mapping of the sense (e.g. &quot;process%1:09:00::&quot;)  to the integer label for each lemma. Start with 0 as the integer and then increment when encountering a unique sense string. </span></li><li class="c3 c21 li-bullet-0"><span class="c45">The following will find the index of the target word (head) in </span><span class="c28 c45">context</span><span class="c2"> and remove the &quot;&lt;head&gt;&lt;/head&gt;&quot; markings:</span></li></ul><a id="t.81a56ce60964857b29edc8fd08cb639e8c6d7773"></a><a id="t.3"></a><table class="c22"><tbody><tr class="c27"><td class="c20" colspan="1" rowspan="1"><p class="c5"><span class="c6 c47">        headMatch=re.compile(r&#39;&lt;head&gt;([^&lt;]+)&lt;/head&gt;&#39;) </span><span class="c6 c49">#matches contents of head</span><span class="c6 c47">      <br>        tokens = context.split() </span><span class="c35 c6">#get the tokens</span></p><p class="c5"><span class="c6 c47">        headIndex = -1 </span><span class="c6 c35">#will be set to the index of the target word</span></p><p class="c5"><span class="c40 c6">        for i in range(len(tokens)):</span></p><p class="c5"><span class="c40 c6">            m = headMatch.match(tokens[i])</span></p><p class="c5"><span class="c6 c47">            if m:</span><span class="c35 c6"> #a match: we are at the target token</span></p><p class="c5"><span class="c40 c6">                tokens[i] = m.groups()[0]</span></p><p class="c5"><span class="c40 c6">                headIndex = i</span></p><p class="c5"><span class="c6 c47">        context = &#39; &#39;.join(tokens)</span><span class="c6 c49"> #turn context back into string (optional)</span></p></td></tr></tbody></table><p class="c3 c8"><span class="c2"></span></p><ul class="c24 lst-kix_wu1g3gcuroz8-0"><li class="c3 c21 li-bullet-0"><span class="c2">Use methods to do the data reading and processing. Call them once on the train data, and then again on the test data. This way you only have one copy of data reading code and one place to debug. </span></li><li class="c3 c21 li-bullet-0"><span class="c2">You may re-use your logistic regression code from Assignment 1</span></li><li class="c3 c21 li-bullet-0"><span class="c2">In PyTorch, CrossEntropyLoss automatically implements the logistic and softmax (see topic (3) class slides on cross-entropy).</span></li><li class="c3 c21 li-bullet-0"><span class="c31 c19"><a class="c36" href="https://www.google.com/url?q=https://docs.google.com/document/d/1mEUmwsCMnrEj7nP1C4Kyt9wXRJYXOhzpKiUx3L3YB1w/edit?ts%3D6047a662&amp;sa=D&amp;source=editors&amp;ust=1636830150722000&amp;usg=AOvVaw3ZB-iKeUN8CH_dedprgNoD">Useful Ingredients for Assignment 2</a></span></li></ul><ul class="c24 lst-kix_wu1g3gcuroz8-1 start"><li class="c3 c51 li-bullet-0"><span class="c2">An introduction to the type of structure that can help with your design decisions</span></li></ul><ul class="c24 lst-kix_wu1g3gcuroz8-0"><li class="c3 c21 li-bullet-0"><span class="c2">Convert all tokens to lowercase just as in assignment 1. </span></li></ul></td></tr></tbody></table><p class="c3 c8"><span class="c7 c11"></span></p><p class="c3"><span class="c19 c25 c26">Example output:</span></p><p class="c3"><span class="c4">[TESTING UNIGRAM WSD MODELS]</span></p><p class="c3"><span class="c4">process                                        </span></p><p class="c3"><span class="c4">  predictions for process.NOUN.000018: [&#39;0.5500&#39;, &#39;2.1585&#39;, &#39;-0.8698&#39;, &#39;-0.2431&#39;, &#39;-0.8704&#39;, &#39;-0.6612&#39;]</span></p><p class="c3"><span class="c4">  predictions for process.NOUN.000024: [&#39;0.5538&#39;, &#39;2.2727&#39;, &#39;-0.9298&#39;, &#39;-0.2154&#39;, &#39;-0.8979&#39;, &#39;-0.6981&#39;]</span></p><p class="c3"><span class="c4">  correct: 141 out of 202</span></p><p class="c3"><span class="c4">machine</span></p><p class="c3"><span class="c4">  predictions for machine.NOUN.000004: [&#39;-0.7073&#39;, &#39;2.3671&#39;, &#39;0.6223&#39;, &#39;-0.2614&#39;, &#39;-0.9226&#39;, &#39;-1.0012&#39;]</span></p><p class="c3"><span class="c4">  predictions for machine.NOUN.000008: [&#39;-0.6270&#39;, &#39;2.0766&#39;, &#39;0.7481&#39;, &#39;-0.3050&#39;, &#39;-0.8659&#39;, &#39;-0.9891&#39;]</span></p><p class="c3"><span class="c4">  correct: 138 out of 202</span></p><p class="c3"><span class="c4">language</span></p><p class="c3"><span class="c4">  predictions for language.NOUN.000008: [&#39;-1.0620&#39;, &#39;0.5458&#39;, &#39;-0.2333&#39;, &#39;-0.9103&#39;, &#39;2.4244&#39;, &#39;-0.7717&#39;]</span></p><p class="c3"><span class="c4">  predictions for language.NOUN.000014: [&#39;-1.0110&#39;, &#39;0.5653&#39;, &#39;-0.2724&#39;, &#39;-0.8846&#39;, &#39;2.2993&#39;, &#39;-0.7144&#39;]</span></p><p class="c3"><span class="c4">  correct: 142 out of 202</span></p><p class="c3 c8"><span class="c4"></span></p><p class="c3 c8"><span class="c4"></span></p><h3 class="c1" id="h.vqlcvvlqjsa7"><span class="c23 c19">Part 2: Extracting PCA-Based Word Embeddings</span></h3><a id="t.9cbd286265278d311cb83a0d4d63eb3519679eae"></a><a id="t.4"></a><table class="c29"><tbody><tr class="c27"><td class="c10" colspan="1" rowspan="1"><p class="c5"><span class="c19">2.1 Convert corpus into co-occurrence matrix (15 points). </span><span class="c7 c11"> Use the contexts from all 3 training datasets (language, process, and machine). For co-occurrence counts, use the number of times the two words appear in the same document.  Restrict to only using the 2000 most frequent words, and add an &quot;&lt;OOV&gt;&quot; column and row to be used for any words that are not among the 2000 most frequent. This matrix should be square and symmetrical (number of rows = vocabulary size + 1 = number of columns). </span></p><p class="c5 c8"><span class="c7 c38 c19 c25"></span></p><p class="c5"><span class="c19">2.2 Run PCA and extract static, 50 dimensional embeddings (15 points). </span><span> To do this, you may use </span><span class="c31"><a class="c36" href="https://www.google.com/url?q=https://pytorch.org/docs/1.4.0/torch.html?highlight%3Dsvd%23torch.svd&amp;sa=D&amp;source=editors&amp;ust=1636830150726000&amp;usg=AOvVaw3EoMzItfaG9NSBViPA2aa_">toch.svd</a></span><span>. SVD only solves PCA if you first </span><span class="c56">standardize </span><span>your data. </span><span class="c56">Standardize</span><span class="c7 c11"> means you must subtract the mean and divide by the standard deviation for each column:</span></p><p class="c18"><span class="c6">data = (data - data.mean(dim=1, keepdim=True)) / data.std(dim=1, keepdim=True)</span></p><p class="c5"><span class="c7 c11"> Make sure to take the first 50 dimensions of the U matrix as the low dimensional representation. Store this in a dictionary so you have:<br>                 {&#39;word1&#39;: [embedding1], &#39;word2&#39;: [embedding], …}</span></p><p class="c5 c8"><span class="c7 c38 c19 c25"></span></p><p class="c5"><span class="c19">2.3 Find the distance between select words (5 points)</span><span class="c7 c11">. Calculate the euclidean distance between the vectors for the following pairs of words:<br>[(&#39;language&#39;, &#39;process&#39;),</span></p><p class="c5"><span class="c7 c11">(&#39;machine&#39;, &#39;process&#39;),</span></p><p class="c5"><span class="c7 c11">(&#39;language&#39;, &#39;speak&#39;),</span></p><p class="c5"><span class="c7 c38 c19 c25">(&#39;word&#39;, &#39;words&#39;),</span></p><p class="c5"><span class="c19">(&#39;word&#39;, &#39;the&#39;)</span><span class="c7 c11">]</span></p><p class="c5 c8"><span class="c7 c11"></span></p><p class="c3"><span class="c45 c19">Part 2 Hints.</span></p><ul class="c24 lst-kix_wu1g3gcuroz8-0"><li class="c3 c21 li-bullet-0"><span class="c2">Make sure to store your matrix as a torch tensor before starting to process it. </span></li><li class="c3 c21 li-bullet-0"><span class="c2">It may be useful to create and standardize the data within numpy before running svd in torch. </span></li><li class="c3 c21 li-bullet-0"><span class="c2">if you&#39;ve scaled your variables correctly before SVD, then distances should rarely be &gt; 2.0 and often be around 1.0. (&#39;word&#39;, &#39;words&#39;) should be closest, and either of (&#39;language&#39;, &#39;process&#39;) or (&#39;machine&#39;, &#39;process&#39;) should be furthest. </span></li><li class="c3 c21 li-bullet-0"><span class="c45 c19">See new output; should be for &quot;word&quot;, &quot;words&quot;</span></li></ul></td></tr></tbody></table><p class="c3 c8"><span class="c7 c11"></span></p><p class="c3"><span class="c41 c19">Example output:</span></p><p class="c3"><span class="c4">(&#39;language&#39;, &#39;process&#39;) : 1.4051</span></p><p class="c3"><span class="c4">(&#39;machine&#39;, &#39;process&#39;) : 1.4054</span></p><p class="c3"><span class="c4">(&#39;language&#39;, &#39;speak&#39;) : 0.9911</span></p><p class="c3"><span class="c4">(&#39;word&#39;, &#39;words&#39;) : 0.1048</span></p><p class="c3"><span class="c4">(&#39;word&#39;, &#39;the&#39;) : 0.9999</span></p><p class="c3 c8"><span class="c4"></span></p><p class="c3 c8"><span class="c4"></span></p><p class="c3 c8"><span class="c4"></span></p><p class="c3 c8"><span class="c7 c11"></span></p><h3 class="c1" id="h.66p5n89tc6g"><span class="c23 c19">Part 3: WSD with Embeddings</span></h3><a id="t.2f29b85eff0ac69a0ad3369071416fdd032d9a62"></a><a id="t.5"></a><table class="c29"><tbody><tr class="c27"><td class="c10" colspan="1" rowspan="1"><p class="c5"><span class="c19">3.1 Extract embedding features (15 pts). </span><span class="c7 c11">Produce 4 sets of embeddings for each target word instance from your PCA embeddings created in Part 2:</span></p><p class="c18"><span class="c39">[two words before] </span><span class="c9">[one word before] </span><span>_target_</span><span class="c43"> [one word after]</span><span> </span><span class="c42">[two words</span><span class="c19 c42"> </span><span class="c42">after]</span><span class="c19">.<br></span><span class="c53">the </span><span class="c9">word</span><span> process </span><span class="c43">for </span><span class="c11 c42 c48">the</span></p><p class="c18"><span class="c39">[-0.22, 0. 75, -0.42] </span><span class="c9">[-0.0019,  0.0024,  0.0033] </span><span class="c43">[-0.03,  0.02,  0.0004] </span><span class="c48 c11 c42">[-0.22, 0. 75, -0.42]</span></p><p class="c18"><span>[-0.22, 0. 75, -0.42, </span><span>-0.0019,  0.0024,  0.0033, </span><span>-0.03,  0.02,  0.0004, </span><span class="c7 c11">-0.22, 0. 75, -0.42]</span></p><p class="c5"><span class="c7 c11">Concatenate all 4 embeddings into a single vector of length 200. </span></p><p class="c5 c8"><span class="c7 c38 c19 c25"></span></p><p class="c5"><span class="c19">3.2 Rerun logistic regression training using your word embeddings (5 pts). </span><span class="c7 c11">Consider changing the penalty to accommodate the new feature size. </span></p><p class="c5 c8"><span class="c7 c38 c19 c25"></span></p><p class="c5"><span class="c19">3.3 Test the new logistic regression classifier (5 pts). </span><span class="c7 c11">Output the number correct out of the total for each word as well as the predictions for following examples: </span></p><p class="c5"><span class="c7 c6">process.NOUN.000018, process.NOUN.000024, language.NOUN.000008, language.NOUN.000014, machine.NOUN.000004, machine.NOUN.000008</span></p><p class="c5"><span>Aim for an accuracy </span><img src="https://www.google.com/chart?cht=tx&amp;chf=bg,s,FFFFFF00&amp;chco=000000&amp;chl=%3E"><span class="c7 c11"> than the most frequent sense baselines for each:</span></p><p class="c5"><span class="c7 c6"> process</span></p><p class="c5"><span class="c7 c6">   correct: 141 out of 202</span></p><p class="c5"><span class="c7 c6"> machine</span></p><p class="c5"><span class="c7 c6">   correct: 138 out of 202</span></p><p class="c5"><span class="c7 c6"> language</span></p><p class="c5"><span class="c7 c6">   correct: 142 out of 202</span></p><p class="c5 c8"><span class="c7 c6"></span></p><p class="c5 c8"><span class="c7 c38 c19 c25"></span></p><p class="c3"><span class="c45 c19">Part 3 Hints.</span></p><ul class="c24 lst-kix_wu1g3gcuroz8-0"><li class="c3 c21 li-bullet-0"><span class="c2">Not only might your accuracy increase, but your training time may decrease due to the smaller feature space. </span></li><li class="c3 c21 li-bullet-0"><span class="c2">Note: Embedding-based WSD may not work better than unigram-based WSD. Just make sure you are doing better than the most frequent sense baseline above.</span></li><li class="c3 c21 li-bullet-0"><span class="c2">You can use zeros in place of the embedding when the target word is at the beginning or end of the context. </span></li></ul></td></tr></tbody></table><p class="c3 c8"><span class="c41 c61 c38 c19 c25 c62"></span></p><p class="c3"><span class="c19 c41">Example Output:</span></p><p class="c3 c8"><span class="c4"></span></p><p class="c3"><span class="c4">process</span></p><p class="c3"><span class="c4">  predictions for process.NOUN.000018: [&#39;0.1107&#39;, &#39;2.7988&#39;, &#39;-0.4470&#39;, &#39;1.0502&#39;, &#39;-2.2774&#39;, &#39;-1.1228&#39;]</span></p><p class="c3"><span class="c4">  predictions for process.NOUN.000024: [&#39;0.5495&#39;, &#39;3.4219&#39;, &#39;-1.3625&#39;, &#39;1.4292&#39;, &#39;-2.4627&#39;, &#39;-1.6034&#39;]</span></p><p class="c3"><span class="c4">  correct: 142 out of 202</span></p><p class="c3"><span class="c4">machine</span></p><p class="c3"><span class="c4">  predictions for machine.NOUN.000004: [&#39;-0.4345&#39;, &#39;2.9917&#39;, &#39;0.8196&#39;, &#39;0.2932&#39;, &#39;-2.3715&#39;, &#39;-1.2307&#39;]</span></p><p class="c3"><span class="c4">  predictions for machine.NOUN.000008: [&#39;-0.0409&#39;, &#39;2.4798&#39;, &#39;1.1604&#39;, &#39;-0.7553&#39;, &#39;-0.9312&#39;, &#39;-1.8865&#39;]</span></p><p class="c3"><span class="c4">  correct: 140 out of 202</span></p><p class="c3"><span class="c4">language</span></p><p class="c3"><span class="c4">  predictions for language.NOUN.000008: [&#39;-1.4646&#39;, &#39;0.1316&#39;, &#39;0.8124&#39;, &#39;-0.6371&#39;, &#39;2.4451&#39;, &#39;-1.1656&#39;]</span></p><p class="c3"><span class="c4">  predictions for language.NOUN.000014: [&#39;-0.9916&#39;, &#39;-0.1459&#39;, &#39;-0.3174&#39;, &#39;-0.5286&#39;, &#39;2.0656&#39;, &#39;-0.2421&#39;]</span></p><p class="c3"><span class="c4">  correct: 143 out of 202</span></p><p class="c3 c8"><span class="c4"></span></p><p class="c3 c8"><span class="c7 c11"></span></p><h3 class="c1" id="h.kl4hfzeki4tp"><span class="c23 c19">Extra Credit: WSD with Lemma and POS-aware embeddings</span></h3><a id="t.44201d6af195435d4cf5920acc2664d5bb2c331d"></a><a id="t.6"></a><table class="c29"><tbody><tr class="c27"><td class="c10" colspan="1" rowspan="1"><p class="c5"><span class="c19">Create a classifier that uses the lemma and POS information in order to improve your results. </span><span>For example, one might encode PCA embeddings using the lemma/POS in addition to the token. How to do this is up to you. Please specify in a README.md file that you have attempted the extra credit (up to 10 pts extra).</span></p></td></tr></tbody></table><p class="c3 c8"><span class="c7 c11"></span></p></div></div><script type="text/javascript" nonce="gAGIbHW1GiEDYYl/B8mcNw">(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var aa="function"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},ba="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
function ca(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");}var da=ca(this);function ea(a,b){if(b)a:{var c=da;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&ba(c,a,{configurable:!0,writable:!0,value:b})}}var h;
if("function"==typeof Object.setPrototypeOf)h=Object.setPrototypeOf;else{var l;a:{var fa={a:!0},ha={};try{ha.__proto__=fa;l=ha.a;break a}catch(a){}l=!1}h=l?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}var ia=h;
function m(a,b){a.prototype=aa(b.prototype);a.prototype.constructor=a;if(ia)ia(a,b);else for(var c in b)if("prototype"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.m=b.prototype}ea("Object.is",function(a){return a?a:function(b,c){return b===c?0!==b||1/b===1/c:b!==b&&c!==c}});var n=this||self;function p(){}function q(a){var b=typeof a;return"object"==b&&null!=a||"function"==b}
function ja(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function ka(a,b){function c(){}c.prototype=b.prototype;a.m=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.D=function(d,e,f){for(var g=Array(arguments.length-2),k=2;k<arguments.length;k++)g[k-2]=arguments[k];return b.prototype[e].apply(d,g)}}function r(a){return a};function t(a){t[" "](a);return a}t[" "]=p;function la(a,b,c){return Object.prototype.hasOwnProperty.call(a,b)?a[b]:a[b]=c(b)};function ma(a){return la(a.prototype,"$$generatedClassName",function(){return"Class$obf_"+{valueOf:function(){return++na}}})}var na=1E3;function v(){}v.prototype.s=function(){return this.j||(Object.defineProperties(this,{j:{value:oa=oa+1|0,enumerable:!1}}),this.j)};v.prototype.toString=function(){var a=w(x(pa(this.constructor)))+"@";var b=(this.s()>>>0).toString(16);return a+w(b)};function y(){}m(y,v);y.prototype.h=function(a){this.g=a;if(a instanceof Object)try{a.v=this}catch(b){}};function qa(a){a.g instanceof Error&&(Error.captureStackTrace?Error.captureStackTrace(a.g):a.g.stack=Error().stack)}y.prototype.toString=function(){var a=x(pa(this.constructor)),b=this.l;return null==b?a:w(a)+": "+w(b)};
function ra(a){if(null!=a){var b=a.v;if(null!=b)return b}a instanceof TypeError?(b=new sa,b.l=w(a),qa(b),b.i=a,b.h(new TypeError(b)),a=b):(b=new z,b.l=w(a),qa(b),b.i=a,b.h(Error(b)),a=b);return a};function A(){}m(A,y);function B(){}m(B,A);function z(){}m(z,B);z.prototype.h=function(a){B.prototype.h.call(this,"__noinit__"===this.i?a:this.i)};function sa(){}m(sa,z);var oa=0;function ta(a,b){return"string"==typeof a?a.charCodeAt(b):a.g(b)};function C(){}var ua,va;m(C,v);function wa(){wa=function(){};va=new D;ua=new E};function D(){}m(D,C);D.prototype.toString=function(){return""};function E(){}m(E,C);E.prototype.toString=function(){return"unknown"};function w(a){return null==a?"null":a.toString()}function xa(a){return 65536<=a?w(String.fromCharCode((55296+((a-65536|0)>>10&1023)|0)&65535))+w(String.fromCharCode((56320+((a-65536|0)&1023)|0)&65535)):String.fromCharCode(a&65535)}function ya(a,b){var c=b,d=a.length,e;b=ta(a,(e=c,c=c+1|0,e));var f;if(e=55296<=b&&56319>=b&&c<d)a=f=ta(a,c),e=56320<=a&&57343>=a;var g;e?g=65536+((b&1023)<<10)+(f&1023)|0:g=b;return g};function F(a,b){this.g=a;this.h=b}m(F,v);function x(a){if(0!=a.h){var b="L"+w(ma(a.g))+";";a=a.h;for(var c="",d=0;d<a;d=d+1|0)c=w(c)+"[";return w(c)+w(b)}return ma(a.g)}F.prototype.toString=function(){return"class "+w(x(this))};function pa(a){return la(a.prototype,"$$class/0",function(){return new F(a,0)})};function za(a){var b=a;try{var c;if(c="www.google.com"===Aa(a)){var d=Ba(a)[5];c="/url"===G(d,!0)}if(c){var e=Ca(a,"q");b=e?e:Ca(a,"url")}}catch(f){if(f=ra(f),!(f instanceof A))throw f.g;}return null!=b?b:""};function G(a,b){return null==a?a:b?decodeURI(a):decodeURIComponent(a)};var Da;function Ba(a){H();a=Da.exec(a);for(var b=[],c=0;7>=c;c=c+1|0)a.length<=c||null==a[c]?b.push(null):b.push(a[c]);return b}function Aa(a){a=Ba(a);return G(a[3],!0)}
function Ca(a,b){H();var c=a.indexOf(xa(35));c=0>c?a.length:c;a:{var d=0;for(var e=b.length;0<(d=a.indexOf(b,d))&&d<c;){var f=ya(a,d-1|0);if(38==f||63==f){if((d+e|0)>=a.length)break a;f=ya(a,d+e|0);if(61==f||38==f||35==f)break a}d=d+(e+1)|0}d=-1}if(0>d)return null;e=a.indexOf(xa(38),d);if(0>e||e>c)e=c;d=d+(b.length+1)|0;b=Math.min(a.length,d);a=a.substr(b,Math.min(a.length,Math.max(d,e))-b|0);c=" ";for(b=0;0<=(b=c.indexOf("\\",b));)36==c.charCodeAt(b+1|0)?(d=w(c.substr(0,b|0))+"$",e=b=b+1|0,c=d+w(c.substr(e))):
(d=w(c.substr(0,b|0)),e=b=b+1|0,c=d+w(c.substr(e)));a=a.replace(RegExp("\\+","g"),c);return G(a,!1)}function H(){H=function(){};Da=RegExp("^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\S\\s]*))?$")};var Ea=/&/g,Fa=/</g,Ga=/>/g,Ha=/"/g,Ia=/'/g,Ja=/\x00/g,Ka=/[\x00&<>"']/;var I;a:{var La=n.navigator;if(La){var Ma=La.userAgent;if(Ma){I=Ma;break a}}I=""}function J(a){return-1!=I.indexOf(a)};var Na=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.indexOf(b,0);for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};var Oa=J("Trident")||J("MSIE"),Pa=J("Edge")||Oa,Qa=J("Gecko")&&!(-1!=I.toLowerCase().indexOf("webkit")&&!J("Edge"))&&!(J("Trident")||J("MSIE"))&&!J("Edge"),Ra=J("Macintosh");function Sa(a){a&&"function"==typeof a.u&&a.u()};function K(){this.h=this.h;this.g=this.g}K.prototype.h=!1;K.prototype.u=function(){this.h||(this.h=!0,this.j())};K.prototype.j=function(){if(this.g)for(;this.g.length;)this.g.shift()()};function Ta(a,b,c){for(var d in a)b.call(c,a[d],d,a)};var L;function M(a,b){this.i=a===Ua&&b||"";this.j=Va}M.prototype.h=!0;M.prototype.g=function(){return this.i};var Va={},Ua={};function N(a,b){this.i=b===O?a:""}N.prototype.h=!0;N.prototype.g=function(){return this.i.toString()};N.prototype.toString=function(){return this.i.toString()};function P(a){return a instanceof N&&a.constructor===N?a.i:"type_error:SafeUrl"}
var Wa=RegExp('^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\w+=(?:\\w+|"[\\w;,= ]+"))*$',"i"),Xa=/^data:(.*);base64,[a-z0-9+\/]+=*$/i,Ya=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;function Za(a){if(a instanceof N)return a;a="object"==typeof a&&a.h?a.g():String(a);Ya.test(a)||(a="about:invalid#zClosurez");return new N(a,O)}
var O={},$a=new N("about:invalid#zClosurez",O);var ab={};function Q(a,b,c){this.i=c===ab?a:"";this.h=!0}Q.prototype.g=function(){return this.i.toString()};Q.prototype.toString=function(){return this.i.toString()};function bb(a,b,c,d){a=a instanceof N?a:Za(a);b=b||n;c=c instanceof M?c instanceof M&&c.constructor===M&&c.j===Va?c.i:"type_error:Const":c||"";return void 0!==d?b.open(P(a),c,d):b.open(P(a),c)};function R(a,b){this.type=a;this.target=b;this.i=!1}R.prototype.g=function(){this.i=!0};var cb=function(){if(!n.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});try{n.addEventListener("test",p,b),n.removeEventListener("test",p,b)}catch(c){}return a}();function S(a){R.call(this,a?a.type:"");this.relatedTarget=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key="";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.pointerId=0;this.pointerType="";this.h=null;if(a){var b=this.type=a.type,c=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;var d=a.relatedTarget;if(d){if(Qa){a:{try{t(d.nodeName);var e=!0;break a}catch(f){}e=!1}e||(d=null)}}else"mouseover"==
b?d=a.fromElement:"mouseout"==b&&(d=a.toElement);this.relatedTarget=d;c?(this.clientX=void 0!==c.clientX?c.clientX:c.pageX,this.clientY=void 0!==c.clientY?c.clientY:c.pageY,this.screenX=c.screenX||0,this.screenY=c.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||"";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=
a.metaKey;this.pointerId=a.pointerId||0;this.pointerType="string"===typeof a.pointerType?a.pointerType:db[a.pointerType]||"";this.state=a.state;this.h=a;a.defaultPrevented&&S.m.g.call(this)}}ka(S,R);var db={2:"touch",3:"pen",4:"mouse"};S.prototype.g=function(){S.m.g.call(this);var a=this.h;a.preventDefault?a.preventDefault():a.returnValue=!1};var T="closure_listenable_"+(1E6*Math.random()|0);var eb=0;function fb(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.h=e;this.key=++eb;this.g=this.o=!1}function gb(a){a.g=!0;a.listener=null;a.proxy=null;a.src=null;a.h=null};function U(a){this.src=a;this.g={};this.h=0}U.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.g[f];a||(a=this.g[f]=[],this.h++);var g;a:{for(g=0;g<a.length;++g){var k=a[g];if(!k.g&&k.listener==b&&k.capture==!!d&&k.h==e)break a}g=-1}-1<g?(b=a[g],c||(b.o=!1)):(b=new fb(b,this.src,f,!!d,e),b.o=c,a.push(b));return b};var V="closure_lm_"+(1E6*Math.random()|0),hb={},ib=0;function jb(a,b,c,d,e){if(d&&d.once)return kb(a,b,c,d,e);if(Array.isArray(b)){for(var f=0;f<b.length;f++)jb(a,b[f],c,d,e);return null}c=lb(c);return a&&a[T]?a.g(b,c,q(d)?!!d.capture:!!d,e):mb(a,b,c,!1,d,e)}
function mb(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");var g=q(e)?!!e.capture:!!e,k=nb(a);k||(a[V]=k=new U(a));c=k.add(b,c,d,g,f);if(c.proxy)return c;d=ob();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)cb||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(pb(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");ib++;return c}
function ob(){function a(c){return b.call(a.src,a.listener,c)}var b=qb;return a}function kb(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)kb(a,b[f],c,d,e);return null}c=lb(c);return a&&a[T]?a.h(b,c,q(d)?!!d.capture:!!d,e):mb(a,b,c,!0,d,e)}
function rb(a){if("number"!==typeof a&&a&&!a.g){var b=a.src;if(b&&b[T])b.i(a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(pb(c),d):b.addListener&&b.removeListener&&b.removeListener(d);ib--;if(c=nb(b)){d=a.type;if(d in c.g){var e=c.g[d],f=Na(e,a),g;(g=0<=f)&&Array.prototype.splice.call(e,f,1);g&&(gb(a),0==c.g[d].length&&(delete c.g[d],c.h--))}0==c.h&&(c.src=null,b[V]=null)}else gb(a)}}}
function pb(a){return a in hb?hb[a]:hb[a]="on"+a}function qb(a,b){if(a.g)a=!0;else{b=new S(b,this);var c=a.listener,d=a.h||a.src;a.o&&rb(a);a=c.call(d,b)}return a}function nb(a){a=a[V];return a instanceof U?a:null}var sb="__closure_events_fn_"+(1E9*Math.random()>>>0);function lb(a){if("function"===typeof a)return a;a[sb]||(a[sb]=function(b){return a.handleEvent(b)});return a[sb]};function W(a){K.call(this);this.l=a;this.i={}}ka(W,K);var tb=[];function ub(a){Ta(a.i,function(b,c){this.i.hasOwnProperty(c)&&rb(b)},a);a.i={}}W.prototype.j=function(){W.m.j.call(this);ub(this)};W.prototype.handleEvent=function(){throw Error("EventHandler.handleEvent not implemented");};function vb(a,b,c,d){b=void 0===b?!1:b;c=void 0===c?!1:c;d=void 0===d?"editors":d;K.call(this);this.i=a||document.body;this.s=!!b;this.A=!!c;this.B=d;this.l=new W(this);a=ja(Sa,this.l);this.h?a():(this.g||(this.g=[]),this.g.push(a));a=this.l;b=this.i;c=this.C;d="click";Array.isArray(d)||(d&&(tb[0]=d.toString()),d=tb);for(var e=0;e<d.length;e++){var f=jb(b,d[e],c||a.handleEvent,!1,a.l||a);if(!f)break;a.i[f.key]=f}}m(vb,K);
vb.prototype.C=function(a){if(!(0!=a.h.button||Ra&&a.ctrlKey||a.i))for(var b=a.target;b&&b!=this.i;){if(b.tagName&&"a"==b.tagName.toLowerCase()){var c=b.getAttribute("href")||b.getAttributeNS("http://www.w3.org/1999/xlink","href"),d=za(c);if(c!=d){a:{b=void 0;try{b=Aa(d)}catch(u){u=ra(u);if(u instanceof A){b=!1;break a}throw u.g;}var e;if(e=null!=b){e=(wa(),va);var f=ua;b=Object.is(e,f)||null==e&&null==f?b.toLocaleLowerCase():b.toLowerCase();e=".google.com"===b.substr(b.length-11|0,11)}b=e}if(!b)if(this.A){c=
za(d);if(Object.is(c,d)||null==c&&null==d)d="//www.google.com/url?q="+w(encodeURIComponent(d)),d=w(d)+"&sa=D";d+="&source="+this.B}else d=this.s?c:d;f=d;b=void 0;d={target:"_blank",noreferrer:!0};c=window;if(f instanceof N)e=f;else{e="undefined"!=typeof f.href?f.href:String(f);if(!(e instanceof N))if(e="object"==typeof e&&e.h?e.g():String(e),Ya.test(e))e=new N(e,O);else{e=String(e);e=e.replace(/(%0A|%0D)/g,"");var g=e.match(Xa);e=g&&Wa.test(g[1])?new N(e,O):null}e=e||$a}g=void 0!==self.i;var k="strict-origin-when-cross-origin";
window.Request&&(k=(new Request("/")).referrerPolicy);k="unsafe-url"===k;if(g&&d.noreferrer){if(k)throw Error("Cannot use the noreferrer option on a page that sets a referrer-policy of `unsafe-url` in modern browsers!");d.noreferrer=!1}f=d.target||f.target;g=[];for(b in d)switch(b){case "width":case "height":case "top":case "left":g.push(b+"="+d[b]);break;case "target":case "noopener":case "noreferrer":break;default:g.push(b+"="+(d[b]?1:0))}b=g.join(",");if((J("iPhone")&&!J("iPod")&&!J("iPad")||J("iPad")||
J("iPod"))&&c.navigator&&c.navigator.standalone&&f&&"_self"!=f)b="A",g=document,b=String(b),"application/xhtml+xml"===g.contentType&&(b=b.toLowerCase()),g=b=g.createElement(b),e=e instanceof N?e:Za(e),g.href=P(e),b.setAttribute("target",f),d.noreferrer&&b.setAttribute("rel","noreferrer"),d=document.createEvent("MouseEvent"),d.initMouseEvent("click",!0,!0,c,1),b.dispatchEvent(d);else if(d.noreferrer){if(c=bb("",c,f,b),d=P(e),c){Pa&&-1!=d.indexOf(";")&&(d="'"+d.replace(/'/g,"%27")+"'");c.opener=null;
Ka.test(d)&&(-1!=d.indexOf("&")&&(d=d.replace(Ea,"&amp;")),-1!=d.indexOf("<")&&(d=d.replace(Fa,"&lt;")),-1!=d.indexOf(">")&&(d=d.replace(Ga,"&gt;")),-1!=d.indexOf('"')&&(d=d.replace(Ha,"&quot;")),-1!=d.indexOf("'")&&(d=d.replace(Ia,"&#39;")),-1!=d.indexOf("\x00")&&(d=d.replace(Ja,"&#0;")));d='<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url='+d+'">';if(void 0===L)if(b=null,(e=n.trustedTypes)&&e.createPolicy){try{b=e.createPolicy("goog#html",{createHTML:r,createScript:r,
createScriptURL:r})}catch(u){n.console&&n.console.error(u.message)}L=b}else L=b;d=(b=L)?b.createHTML(d):d;d=new Q(d,null,ab);(c=c.document)&&c.write&&(c.write(d instanceof Q&&d.constructor===Q?d.i:"type_error:SafeHtml"),c.close())}}else(c=bb(e,c,f,b))&&d.noopener&&(c.opener=null);a.g();break}}b=b.parentNode}};function wb(a,b,c,d){new vb(a,void 0===b?!1:b,void 0===c?!1:c,d)}var X=["DOCS_installLinkReferrerSanitizer"],Y=n;X[0]in Y||"undefined"==typeof Y.execScript||Y.execScript("var "+X[0]);
for(var Z;X.length&&(Z=X.shift());)X.length||void 0===wb?Y[Z]&&Y[Z]!==Object.prototype[Z]?Y=Y[Z]:Y=Y[Z]={}:Y[Z]=wb;}).call(this);
</script><script type="text/javascript" nonce="gAGIbHW1GiEDYYl/B8mcNw">DOCS_installLinkReferrerSanitizer( undefined,  true,  true, 'docs');</script></body></html>